# This file is auto-generated by rspec-openapi https://github.com/k0kubun/rspec-openapi
#
# When you write a spec in spec/requests, running the spec with `OPENAPI=1 rspec` will
# update this file automatically. You can also manually edit this file.
---
openapi: 3.0.3
info:
  title: rspec-openapi
  version: 1.0.0
  description: My beautiful API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
- url: http://localhost:3000
paths:
  "/no-such-path":
    get:
      summary: no such api
      parameters: []
      responses:
        '200':
          description: dummy
          content:
            application/json:
              schema:
                type: number
              example:
                - 1
  "/tables":
    get:
      summary: index
      tags:
      - Table
      parameters:
      - name: page
        in: query
        schema:
          type: integer
        example: 1
      - name: per
        in: query
        schema:
          type: integer
        example: 10
      - name: filter[name]
        in: query
        schema:
          type: object
          properties:
            name:
              type: string
        example:
          name: Example Table
      - name: filter[price]
        in: query
        schema:
          type: object
          properties:
            price:
              type: string
        example:
          price: '0'
      - name: X-Authorization-Token
        in: header
        required: true
        schema:
          type: string
        example: token
      responses:
        '200':
          description: with flat query parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Table"
              example:
              - id: 1
                name: access
                description: logs
                database:
                  id: 2
                  name: production
                null_sample:
                storage_size: 12.3
                created_at: '2020-07-17T00:00:00+00:00'
                updated_at: '2020-07-17T00:00:00+00:00'
        '401':
          description: does not return tables if unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  no_such_field:
                    type: string
                    example: This field does not exist in rspec
              example:
                message: This field should be updated by rspec
    post:
      summary: This method should be removed!!
      tags:
      - Table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                database_id:
                  type: integer
                no_such_field_request:
                  type: boolean
              required:
                - name
                - description
                - database_id
                - no_such_field_request
            example:
              name: k0kubun
              description: description
              database_id: 2
              no_such_field_request: true
      responses:
        '201':
          description: returns a table
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Table"
              example:
                id: 1
                name: access
                description: logs
                database:
                  id: 2
                  name: production
                null_sample:
                storage_size: 12.3
                created_at: '2020-07-17T00:00:00+00:00'
                updated_at: '2020-07-17T00:00:00+00:00'
  "/tables/{id}":
    get:
      summary: This filed should be updated by rspec
      tags:
      - Table
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      responses:
        '200':
          description: returns a table with changes !!!
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  database:
                    discriminator:
                      propertyName: name
                    oneOf:
                    - type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          host:
                            type: string
                          port:
                            type: integer
                          user:
                            type: string
                          schema:
                            type: string
                    - type: object
                      properties:
                        host:
                          type: string
                        port:
                          type: integer
                        user:
                          type: string
                        schema:
                          type: string
                      required:
                        - host
                        - port
                        - schema
                  null_sample:
                    nullable: true
                  storage_size:
                    type: number
                    format: float
                  no_such_field_response:
                    type: boolean
                  created_at:
                    type: string
                  updated_at:
                    type: string
              example:
                id: 1
                name: access
                description: logs
                no_such_field_response: true
                database:
                  id: 2
                  name: production
                null_sample:
                storage_size: 12.3
                created_at: '2020-07-17T00:00:00+00:00'
                updated_at: '2020-07-17T00:00:00+00:00'
  "/users":
    post:
      summary: Create
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - "$ref": "#/components/schemas/PostUsersRequest"
              - type: string
      responses:
        '201':
          description: returns a user
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
  "/users/{id}":
    get:
      responses:
        '200':
          description: returns a user
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
components:
  schemas:
    Table:
      type: object
      properties:
        id:
          type: integer
        # This field should exists in expected
        # name:
        #  type: string
        this_field_should_not_exist_in_expected:
          type: string
        description:
          type: string
        database:
          "$ref": "#/components/schemas/Database"
        columns:
          type: array
          items:
            "$ref": "#/components/schemas/Column"
        null_sample:
          nullable: true
        storage_size:
          type: number
          format: float
        created_at:
          type: string
        updated_at:
          type: string
    Database:
      type: object
      description: 'this should be preserved'
      properties:
        id:
          type: integer
          description: 'this should be preserved'
        # This filed should exists in expected
        # name:
        #  type: string
        this_field_should_not_exist_in_expected:
          type: string
        this_field_should_not_exist_in_expected_2:
          "$ref": "#/components/schemas/NoSuchSchemaFound"
    SchemaNotInUse:
      type: object
      description: 'should be deleted'
      properties:
        id:
          type: integer
    User:
      discriminator:
        propertyName: name
      oneOf:
      - type: object
        properties:
          name:
            type: string
          foo:
            type: string
          bar:
            type: string
          baz:
            type: string
          quux:
            type: string
      - type: object
        properties:
          name:
            type: string
          relations:
            type: object
            properties:
              avatar:
                "$ref": "#/components/schemas/Avatar"
              pets:
                type: array
                items:
                  "$ref": "#/components/schemas/Pet"
